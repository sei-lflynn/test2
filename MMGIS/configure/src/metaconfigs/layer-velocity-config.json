{
  "tabs": [
    {
      "name": "Core",
      "rows": [
        {
          "name": "Core",
          "components": [
            {
              "field": "type",
              "name": "Layer Type",
              "description": "",
              "type": "dropdown",
              "width": 2,
              "options": [
                "data",
                "header",
                "model",
                "query",
                "tile",
                "vector",
                "vectortile",
                "velocity"
              ]
            },
            {
              "field": "name",
              "name": "Layer Name",
              "description": "A display name for the layer.",
              "type": "textnotrim",
              "width": 6,
              "required": true
            },
            {
              "field": "kind",
              "name": "Kind of Layer",
              "description": "The kind of velocity layer: streamlines, particles, arrows (in development), or windbarbs (in development).",
              "type": "dropdown",
              "width": 2,
              "default": "streamlines",
              "options": [
                "streamlines",
                "particles",
                "arrows",
                "windbarbs"
              ]
            },
            {
              "field": "visibility",
              "name": "Initial Visibility",
              "description": "Whether the layer is on initially.",
              "type": "checkbox",
              "width": 2,
              "defaultChecked": false
            }
          ]
        },
        {
          "components": [
            {
              "field": "url",
              "name": "URL",
              "description": "A file path that points to a geojson, gribjson (streamlines only), or geotiff (arrows only). If the path is relative, it will be relative to the mission's directory. The URL must contain a proper placeholder ending such as: {z}/{x}/{y}.png.",
              "type": "text",
              "width": 12,
              "required": true,
              "conditionalRequired": {"field": "controlled", "value": false}
            }
          ]
        },
        {
          "components": [
            {
              "field": "minZoom",
              "name": "Minimum Zoom",
              "description": "The lowest (smallest number) zoom level for which to show this layer. If the current Map's zoom level is less than this, the layer will not be rendered even if the layer is still on.",
              "type": "number",
              "min": 0,
              "step": 1,
              "width": 2
            },
            {
              "field": "maxZoom",
              "name": "Maximum Zoom",
              "description": "The highest (greatest number) zoom level for which to show this layer. If the current Map's zoom level is higher/deeper than this, the layer will not be rendered even if the layer is still on.",
              "type": "number",
              "min": 0,
              "step": 1,
              "width": 2
            },
            {
              "field": "initialOpacity",
              "name": "Initial Opacity",
              "description": "A value from 0 (transparent) to 1 (opaque) of the layer's initial opacity.",
              "type": "number",
              "min": 0,
              "max": 1,
              "width": 2
            },
            {
              "field": "controlled",
              "name": "Controlled",
              "description": "Whether the layer can be dynamically updated via the JavaScript API or not. If true, the layer can be dynamically updated and the URL is not required. If true and a URL is set and Time Enabled is true, the initial url query will be performed.",
              "type": "checkbox",
              "width": 4,
              "defaultChecked": false
            }
          ]
        }
      ]
    },
    {
      "name": "Style",
      "rows": [
        {
          "name": "Style",
          "components": []
        },
        {
          "subname": "Streamlines",
          "subdescription": "Styling options for streamlines.",
          "components": [
            {
              "field": "variables.streamlines.minVelocity",
              "name": "Min Velocity",
              "description": "Velocity at which particle intensity is minimum (m/s). Default 0",
              "default": 0,
              "type": "number",
              "width": 3
            },
            {
              "field": "variables.streamlines.maxVelocity",
              "name": "Max Velocity",
              "description": "Velocity at which particle intensity is maximum (m/s). Default: 15",
              "type": "number",
              "width": 3
            },
            {
              "field": "variables.streamlines.velocityScale",
              "name": "Velocity Scale",
              "description": "Scale for wind velocity. Default: 0.005",
              "type": "number",
              "width": 3
            },
            {
              "field": "variables.streamlines.particleAge",
              "name": "Particle Age",
              "description": "Max number of frames a particle is drawn before regeneration. Default: 90",
              "type": "number",
              "width": 3
            }
          ]
        },
        {
          "components": [
            {
              "field": "variables.streamlines.lineWidth",
              "name": "Line Width",
              "description": "Line width of a drawn particle. Default: 1",
              "type": "number",
              "min": 0,
              "step": 1,
              "width": 3
            },
            {
              "field": "variables.streamlines.particleMultiplier",
              "name": "Particle Multiplier",
              "description": "Particle count scalar. Default: 1/300",
              "type": "number",
              "width": 3
            },
            {
              "field": "variables.streamlines.frameRate",
              "name": "Frame Rate",
              "description": "Particle frame rate. Default 15",
              "type": "number",
              "min": 0,
              "step": 1,
              "width": 3
            },
            {
              "field": "variables.streamlines.displayValues",
              "name": "Display Values",
              "description": "Display pixel values.",
              "type": "switch",
              "width": 3,
              "defaultChecked": true
            }
          ]
        },
        {
          "components": [
            {
              "field": "variables.streamlines.colorScale",
              "name": "Color Scale",
              "description": "Set of colors for visualizing velocity magnitude values.",
              "type": "colordropdown",
              "width": 6,
              "default": "RDYLBU_R",
              "options": "{{VELOCITY_COLORMAP_NAMES}}"
            },
            {
              "field": "variables.streamlines.units",
              "name": "Units",
              "description": "Units string by which to suffix values. For instance if the units are meters, use 'm' so that values are displayed as '100m'.",
              "type": "textnotrim",
              "width": 3
            },
            {
              "field": "variables.streamlines.displayPosition",
              "name": "Display Position",
              "description": "Where to display data values.",
              "type": "dropdown",
              "width": 3,
              "options": ["bottomleft", "bottomright", "topleft", "topright" ]
            }
          ]
        },
        {
          "subname": "Particles",
          "subdescription": "Styling options for particles.",
          "components": [
            {
              "field": "style.color",
              "name": "Color",
              "description": "The color of the particles..",
              "type": "colorpicker",
              "width": 2
            },
            {
              "field": "variables.particles.units",
              "name": "Units",
              "description": "Units string by which to suffix values. For instance if the units are meters, use 'm' so that values are displayed as '100m'.",
              "type": "textnotrim",
              "width": 2
            }
          ]
        },
        {
          "components": [
            {
              "field": "variables.particles.angle",
              "name": "Particle Angle",
              "description": "Particle angle (degrees). Default: 80",
              "type": "number",
              "width": 2
            },
            {
              "field": "variables.particles.width",
              "name": "Particle Width",
              "description": "Particle width (px). Default: 1",
              "type": "number",
              "width": 2
            },
            {
              "field": "variables.particles.spacing",
              "name": "Particle Spacing",
              "description": "X-spacing between particles (px). Default 10",
              "type": "number",
              "width": 2
            },
            {
              "field": "variables.particles.length",
              "name": "Particle Length",
              "description": "Particle length (px). Default: 4",
              "type": "number",
              "width": 2
            },
            {
              "field": "variables.particles.interval",
              "name": "Particle Interval",
              "description": "Y-spacing between particles (px). Default: 10",
              "type": "number",
              "width": 2
            },
            {
              "field": "variables.particles.speed",
              "name": "Particle Speed",
              "description": "Particle speed factor. Default 0.1",
              "type": "number",
              "width": 2
            }
          ]
        }
      ]
    },
    {
      "name": "Time",
      "rows": [
        {
          "name": "Time",
          "components": [
            {
              "field": "time.enabled",
              "name": "Time Enabled",
              "description": "True if the layer is time enabled. URLs that contain {starttime} or {endtime} will be dynamically replaced by their set values when the layer is fetched. If true and a URL is set and Controlled is true, only the initial url query will be performed.",
              "type": "switch",
              "width": 3,
              "defaultChecked": false
            }
          ]
        },
        {
          "components": [
            {
              "field": "time.type",
              "name": "Time Type",
              "description": "When the time changes, whether the layer should requery the source or filter the layer locally based on feature properties.",
              "type": "dropdown",
              "width": 3,
              "options": ["requery", "local"]
            }
          ]
        },
        {
          "components": [
            {
              "field": "time.format",
              "name": "Time Format",
              "description": "The string format to be used in the URL for {starttime} and {endtime}. Uses D3 time format specifiers: https://github.com/d3/d3-time-format. Default: %Y-%m-%dT%H:%M:%SZ",
              "type": "text",
              "width": 6
            }
          ]
        },
        {
          "components": [
            {
              "field": "time.startProp",
              "name": "Start Time Property Name",
              "description": "Optional and only in use if Time Enabled = true and Time Type = Local. The starting time property path. Setting this is addition to Main Time Property Name casts the feature's time over a range instead of as a single point in time. Can use dot-notation for nested path. Can be a unix timestamp or an ISO time (end the ISO with a Z to designate that it should be treated as a UTC time).",
              "type": "text",
              "width": 6
            },
            {
              "field": "time.endProp",
              "name": "Main/End Time Property Name",
              "description": "Required in Time Enabled = true and Time Type = Local. The main time property path. Can use dot-notation for nested path. Can be a unix timestamp or an ISO time (end the ISO with a Z to designate that it should be treated as a UTC time).",
              "type": "text",
              "width": 6
            }
          ]
        },
        {
          "components": [
            {
              "field": "time.refreshIntervalEnabled",
              "name": "Refresh Interval Enabled",
              "description": "If 'Time Enabled' and 'Refresh Interval Enabled', this layer will automatically refresh/requery its data every 'Refresh Every N Seconds'. This is useful when the layer's data updates at some uniform cadence. Be aware that this may be an expensive operation depending on the amount of data a layer needs and the number of layers that have this enabled.",
              "type": "switch",
              "width": 5,
              "defaultChecked": false
            },
            {
              "field": "time.refreshIntervalAmount",
              "name": "Refresh Every N Seconds",
              "description": "If 'Time Enabled' and 'Refresh Interval Enabled', this layer will automatically refresh/requery its data every n seconds. If null or 0, defaults to 60.",
              "type": "number",
              "min": 1,
              "width": 3
            }
          ]
        }
      ]
    },
    {
      "name": "Legend",
      "rows": [
        {
          "name": "Legend",
          "components": [
            {
              "new": true,
              "field": "legend",
              "name": "Legend From URL",
              "description": "A URL to a static image or .csv with the following header: 'color,strokecolor,shape,value'. If the path is relative, it will be relative to the mission's directory. This legend is overridden if a legend is also configured below.",
              "type": "text",
              "width": 10
            },
            {
              "new": true,
              "field": "variables.hideLegendLayerName",
              "name": "Hide layer name",
              "description": "Hide layer name in the legend.",
              "type": "checkbox",
              "width": 2
            }
          ]
        },
        {
          "components": [
            {
              "field": "variables.legend",
              "name": "Legend",
              "description": "Configures a legend for the layer. The Legend Tool renders symbologies and gradient scales for any properly configured layer that is on.",
              "type": "objectarray",
              "width": 12,
              "object": [
                {
                  "field": "color",
                  "name": "Fill Color",
                  "description": "A color for the main fill of the symbol.",
                  "type": "colorpicker",
                  "width": 2
                },
                {
                  "field": "strokecolor",
                  "name": "Border Color",
                  "description": "A stroke/border color. Note that 'discreet' and 'continuous' shapes have no borders.",
                  "type": "colorpicker",
                  "width": 2
                },
                {
                  "field": "shape",
                  "name": "Shape",
                  "description": "The symbol for which to us for this legend entry. Discreet and continuous describe scales. These scales are broken into groups by a change in shape value. For instance, 'discreet, discreet, discreet, circle, discreet, discreet' represents a discreet scales of three colors, a circle and then a discreet scale of two colors.",
                  "type": "dropdown",
                  "width": 5,
                  "options": [
                    "circle",
                    "square",
                    "rect",
                    "triangle",
                    "continuous",
                    "discreet"
                  ]
                },
                {
                  "field": "value",
                  "name": "Label",
                  "description": "A label description for this legend entry.",
                  "type": "text",
                  "width": 3
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "name": "Information",
      "rows": [
        {
          "name": "Information",
          "subname": "Layer Tags",
          "subdescription": "Assign tags to this layer so that they may be searched upon through the LayersTool. A category may be specified with the following pattern: 'category:tag'",
          "components": [
            {
              "field": "tags.0",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.1",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.2",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.3",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.4",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.5",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            }
          ]
        },
        {
          "components": [
            {
              "field": "tags.6",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.7",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.8",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.9",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.10",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            },
            {
              "field": "tags.11",
              "name": "Tag",
              "description": "",
              "type": "text",
              "width": 2
            }
          ]
        },
        {
          "subname": "Description",
          "subdescription": "A freeform markdown description of the layer. In the LayersTool, users may click the information icon beside the layer's name to view this information.",
          "components": [
            {
              "field": "description",
              "name": "Description",
              "description": "",
              "type": "markdown",
              "width": 12
            }
          ]
        }
      ]
    }
  ]
}
