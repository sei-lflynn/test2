#
# Configuration file of KMC Crypto Library for unit tests
#
key_management_service_uri=tls12://test-kmc-home.kms.example.com:5696

crypto_service_uri=https://crypto-service.example.com:8443/crypto-service

# access to Crypto Service: either SSO or mTLS
#crypto_service_sso_cookie_file=$HOME/.cam_cookie_file
#crypto_service_mtls_client_type=PEM
#crypto_service_mtls_client_key=key_file.pem
#crypto_service_mtls_client_cert=cert_file.pem

# keystore for authenticating with KMS when TLS is used
keystore_file=/example/kmc/tls/keystore/path/kmc-server-keystore.jks
keystore_password=changeit

# authenticating Crypto Service with KMS if KMS is protected by CAM
crypto_service_principal=mgss-crypto-service
crypto_service_keytab=/example/kmc-crypto-service/ketab/path/filename.keytab

# parameters for connection to KMS
# default cipher suites: TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
#additional_cipher_suites="TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"
connection_timeout_connect=2000
connection_timeout_read=5000

# Crypto algorithms should use Java standard names:
# https://docs.oracle.com/en/java/javase/17/docs/specs/security/standard-names.html


default_symmetric_encryption_algorithm=AES-256
allowed_symmetric_encryption_algorithms=AES-128:AES-256:DESede-168
default_asymmetric_encryption_algorithm=RSA-2048
allowed_asymmetric_encryption_algorithms=RSA-2048:RSA-3072:RSA-4096

default_message_digest_algorithm=SHA-256
allowed_message_digest_algorithms=SHA-1:SHA-256:SHA-384:SHA-512
default_hmac_algorithm=HmacSHA256
allowed_hmac_algorithms=HmacSHA1:HmacSHA256:HmacSHA384:HmacSHA512
default_cmac_algorithm=AESCMAC
allowed_cmac_algorithms=AESCMAC:DESedeCMAC
default_digital_signature_algorithm=SHA256withRSA
allowed_digital_signature_algorithms=SHA1withRSA:SHA256withRSA:SHA384withRSA:SHA512withRSA

default_AES_transformation=AES/CBC/PKCS5Padding
allowed_AES_transformations=AES/CBC/PKCS5Padding:AES/GCM/NoPadding
default_DESede_transformation=DESede/CBC/PKCS5Padding
allowed_DESede_transformations=DESede/CBC/PKCS5Padding
default_RSA_transformation=RSA/ECB/OAEPWithSHA-256AndMGF1Padding
allowed_RSA_transformations=RSA/ECB/PKCS1Padding:RSA/ECB/OAEPWithSHA-256AndMGF1Padding:RSA/ECB/OAEPWithSHA1AndMGF1Padding

# Default Providers
# http://docs.oracle.com/javase/7/docs/technotes/guides/security/SunProviders.html
# Uncomment and change value if non-default provider is used.
#SHA1PRNG_provider=SUN
#AES_provider=SunJCE
#DESede_provider=SunJCE
#RSA_provider=SunJCE
#SHA-1_provider=SUN
#SHA-256_provider=SUN
#SHA-384_provider=SUN
#SHA-512_provider=SUN
#HmacSHA1_provider=SunJCE
#HmacSHA256_provider=SunJCE
#HmacSHA384_provider=SunJCE
#HmacSHA512_provider=SunJCE
#SHA1withRSA_provider=SunRsaSign
#SHA256withRSA_provider=SunRsaSign
#SHA384withRSA_provider=SunRsaSign
#SHA512withRSA_provider=SunRsaSign

# Provider classes
#SUN=sun.security.provider.Sun
#SunJCE=com.sun.crypto.provider.SunJCE
BCFIPS_provider_class=org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider

# Bouncy Castle FIPS provider
AES_provider=BCFIPS
AESCMAC_provider=BCFIPS
DESedeCMAC_provider=BCFIPS
AESGCM_provider=BCFIPS
